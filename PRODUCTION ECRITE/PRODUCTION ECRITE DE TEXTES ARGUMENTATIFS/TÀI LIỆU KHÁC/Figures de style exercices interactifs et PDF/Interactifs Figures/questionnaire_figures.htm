<?xml version="1.0"?>
       <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "xhtml11.dtd">
       <html xmlns="http://www.w3.org/1999/xhtml"
             xml:lang="en"><head><meta name="author" content="Created with Hot Potatoes by Half-Baked Software, registered to Mohammed Bouchriha."></meta><meta name="keywords" content="Hot Potatoes, Hot Potatoes, Half-Baked Software, Windows, University of Victoria"></meta>

<link rel="schema.DC" href="http://purl.org/dc/elements/1.1/" />
<meta name="DC:Creator" content="Mohammed Bouchriha" />
<meta name="DC:Title" content="&#x003C;a style=&quot;cursor: pointer; text-decoration: underline;&quot; onclick=&quot;window.open('https://sites.google.com/site/francaislycee/');return false;&quot;&#x003E;Les figures de style &#x00E0; &#x003C;img src=&quot;../../Pictures/mes images/Bouchriha.JPG&quot; alt=&quot;Bouchriha.JPG&quot; title=&quot;Bouchriha&quot; width=&quot;60&quot; height=&quot;72&quot; style=&quot;float: left;&quot;&#x003E;&#x003C;/img&#x003E;retenir&#x003C;/a&#x003E;" />


<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" /> 

<title>
Les figures de style &#x00E0; retenir
</title>

<!-- Made with executable version 6.3 Release 0 Build 5 -->

<!-- The following insertion allows you to add your own code directly to this head tag from the configuration screen -->



<style type="text/css">


/* This is the CSS stylesheet used in the exercise. */
/* Elements in square brackets are replaced by data based on configuration settings when the exercise is built. */

/* BeginCorePageCSS */

/* Made with executable version 6.3 Release 0 Build 5 */


/* Hack to hide a nested Quicktime player from IE, which can't handle it. */
* html object.MediaPlayerNotForIE {
	display: none;
}

body{
	font-family: Geneva,Arial,sans-serif;
	background-color: #C0C0C0;
	color: #000000;
 
	margin-right: 5%;
	margin-left: 5%;
	font-size: small;
}

p{
	text-align: left;
	margin: 0px;
	font-size: 100%;
}

table,div,span,td{
	font-size: 100%;
	color: #000000;
}

div.Titles{
	padding: 0.5em;;
	text-align: center;
	color: #000000;
}

button{
	font-family: Geneva,Arial,sans-serif;
	font-size: 100%;
	display: inline;
}

.ExerciseTitle{
	font-size: 140%;
	color: #000000;
}

.ExerciseSubtitle{
	font-size: 120%;
	color: #000000;
}

div.StdDiv{
	background-color: #FFCCCC;
	text-align: center;
	font-size: 100%;
	color: #000000;
	padding: 0.5em;
	border-style: solid;
	border-width: 1px 1px 1px 1px;
	border-color: #000000;
	margin-bottom: 1px;
}

/* EndCorePageCSS */

.RTLText{
	text-align: right;
	font-size: 150%;
	direction: rtl;
	font-family: "Simplified Arabic", "Traditional Arabic", "Times New Roman", Geneva,Arial,sans-serif; 
}

.CentredRTLText{
	text-align: center;
	font-size: 150%;
	direction: rtl;
	font-family: "Simplified Arabic", "Traditional Arabic", "Times New Roman", Geneva,Arial,sans-serif; 
}

button p.RTLText{
	text-align: center;
}

.RTLGapBox{
	text-align: right;
	font-size: 150%;
	direction: rtl;
	font-family: "Times New Roman", Geneva,Arial,sans-serif;
}

.Guess{
	font-weight: bold;
}

.CorrectAnswer{
	font-weight: bold;
}

div#Timer{
	padding: 0.25em;
	margin-left: auto;
	margin-right: auto;
	text-align: center;
	color: #000000;
}

span#TimerText{
	padding: 0.25em;
	border-width: 1px;
	border-style: solid;
	font-weight: bold;
	display: none;
	color: #000000;
}

span.Instructions{

}

div.ExerciseText{

}

.FeedbackText, .FeedbackText span.CorrectAnswer, .FeedbackText span.Guess, .FeedbackText span.Answer{
	color: #000000;
}

.LeftItem{
	font-size: 100%;
	color: #000000;
	text-align: left;
}

.RightItem{
	font-weight: bold;
	font-size: 100%;
	color: #000000;
}

span.CorrectMark{

}

input, textarea{
	font-family: Geneva,Arial,sans-serif;
	font-size: 120%;
}

select{
	font-size: 100%;
}

div.Feedback {
	background-color: #C0C0C0;
	left: 33%;
	width: 34%;
	top: 33%;
	z-index: 1;
	border-style: solid;
	border-width: 1px;
	padding: 5px;
	text-align: center;
	color: #000000;
	position: absolute;
	display: none;
	font-size: 100%;
}




div.ExerciseDiv{
	color: #000000;
}

/* JMatch flashcard styles */
table.FlashcardTable{
	background-color: transparent;
	color: #000000;
	border-color: #000000;
	margin-left: 5%;
	margin-right: 5%;
	margin-top: 2em;
	margin-bottom: 2em;
	width: 90%;
	position: relative;
	text-align: center;
	padding: 0px;
}

table.FlashcardTable tr{
	border-style: none;
	margin: 0px;
	padding: 0px;
	background-color: #FFCCCC;
}

table.FlashcardTable td.Showing{
	font-size: 140%;
	text-align: center;
	width: 50%;
	display: table-cell;
	padding: 2em;
	margin: 0px;
	border-style: solid;
	border-width: 1px;
	color: #000000;
	background-color: #FFCCCC;
}

table.FlashcardTable td.Hidden{
	display: none;
}

/* JMix styles */
div#SegmentDiv{
	margin-top: 2em;
	margin-bottom: 2em;
	text-align: center;
}

a.ExSegment{
	font-size: 120%;
	font-weight: bold;
	text-decoration: none;
	color: #000000;
}

span.RemainingWordList{
	font-style: italic;
}

div.DropLine {
	position: absolute;
	text-align: center;
	border-bottom-style: solid;
	border-bottom-width: 1px;
	border-bottom-color: #000000;
	width: 80%;
}

/* JCloze styles */

.ClozeWordList{
	text-align: center;
	font-weight: bold;
}

div.ClozeBody{
	text-align: left;
	margin-top: 2em;
	margin-bottom: 2em;
	line-height: 2.0
}

span.GapSpan{
	font-weight: bold;
}

/* JCross styles */

table.CrosswordGrid{
	margin: auto auto 1em auto;
	border-collapse: collapse;
	padding: 0px;
	background-color: #000000;
}

table.CrosswordGrid tbody tr td{
	width: 1.5em;
	height: 1.5em;
	text-align: center;
	vertical-align: middle;
	font-size: 140%;
	padding: 1px;
	margin: 0px;
	border-style: solid;
	border-width: 1px;
	border-color: #000000;
	color: #000000;
}

table.CrosswordGrid span{
	color: #000000;
}

table.CrosswordGrid td.BlankCell{
	background-color: #000000;
	color: #000000;
}

table.CrosswordGrid td.LetterOnlyCell{
	text-align: center;
	vertical-align: middle;
	background-color: #ffffff;
	color: #000000;
	font-weight: bold;
}

table.CrosswordGrid td.NumLetterCell{
	text-align: left;
	vertical-align: top;
	background-color: #ffffff;
	color: #000000;
	padding: 1px;
	font-weight: bold;
}

.NumLetterCellText{
	cursor: pointer;
	color: #000000;
}

.GridNum{
	vertical-align: super;
	font-size: 66%;
	font-weight: bold;
	text-decoration: none;
	color: #000000;
}

.GridNum:hover, .GridNum:visited{
	color: #000000;
}

table#Clues{
	margin: auto;
	vertical-align: top;
}

table#Clues td{
	vertical-align: top;
}

table.ClueList{
  margin: auto;
}

td.ClueNum{
	text-align: right;
	font-weight: bold;
	vertical-align: top;
}

td.Clue{
	text-align: left;
}

div#ClueEntry{
	text-align: left;
	margin-bottom: 1em;
}

/* Keypad styles */

div.Keypad{
	text-align: center;
	display: none; /* initially hidden, shown if needed */
	margin-bottom: 0.5em;
}

div.Keypad button{
	font-family: Geneva,Arial,sans-serif;
	font-size: 120%;
	background-color: #ffffff;
	color: #000000;
	width: 2em;
}

/* JQuiz styles */

div.QuestionNavigation{
	text-align: center;
}

.QNum{
	margin: 0em 1em 0.5em 1em;
	font-weight: bold;
	vertical-align: middle;
}

textarea{
	font-family: Geneva,Arial,sans-serif;
}

.QuestionText{
	text-align: left;
	margin: 0px;
	font-size: 100%;
}

.Answer{
	font-size: 120%;
	letter-spacing: 0.1em;
}

.PartialAnswer{
	font-size: 120%;
	letter-spacing: 0.1em;
	color: #000000;
}

.Highlight{
	color: #000000;
	background-color: #ffff00;
	font-weight: bold;
	font-size: 120%;
}

ol.QuizQuestions{
	text-align: left;
	list-style-type: none;
}

li.QuizQuestion{
	padding: 1em;
	border-style: solid;
	border-width: 0px 0px 1px 0px;
}

ol.MCAnswers{
	text-align: left;
	list-style-type: upper-alpha;
	padding: 1em;
}

ol.MCAnswers li{
	margin-bottom: 1em;
}

ol.MSelAnswers{
	text-align: left;
	list-style-type: lower-alpha;
	padding: 1em;
}

div.ShortAnswer{
	padding: 1em;
}

.FuncButton {
	text-align: center;
	border-style: solid;

	border-left-color: #ffe5e5;
	border-top-color: #ffe5e5;
	border-right-color: #7f6666;
	border-bottom-color: #7f6666;
	color: #000000;
	background-color: #FFCCCC;

	border-width: 2px;
	padding: 3px 6px 3px 6px;
	cursor: pointer;
}

.FuncButtonUp {
	color: #FFCCCC;
	text-align: center;
	border-style: solid;

	border-left-color: #ffe5e5;
	border-top-color: #ffe5e5;
	border-right-color: #7f6666;
	border-bottom-color: #7f6666;

	background-color: #000000;
	color: #FFCCCC;
	border-width: 2px;
	padding: 3px 6px 3px 6px;
	cursor: pointer;
}

.FuncButtonDown {
	color: #FFCCCC;
	text-align: center;
	border-style: solid;

	border-left-color: #7f6666;
	border-top-color: #7f6666;
	border-right-color: #ffe5e5;
	border-bottom-color: #ffe5e5;
	background-color: #000000;
	color: #FFCCCC;

	border-width: 2px;
	padding: 3px 6px 3px 6px;
	cursor: pointer;
}

/*BeginNavBarStyle*/

div.NavButtonBar{
	background-color: #000000;
	text-align: center;
	margin: 2px 0px 2px 0px;
	clear: both;
	font-size: 100%;
}

.NavButton {
	border-style: solid;
	
	border-left-color: #7f7f7f;
	border-top-color: #7f7f7f;
	border-right-color: #000000;
	border-bottom-color: #000000;
	background-color: #000000;
	color: #ffffff;

	border-width: 2px;
	cursor: pointer;	
}

.NavButtonUp {
	border-style: solid;

	border-left-color: #7f7f7f;
	border-top-color: #7f7f7f;
	border-right-color: #000000;
	border-bottom-color: #000000;
	color: #000000;
	background-color: #ffffff;

	border-width: 2px;
	cursor: pointer;	
}

.NavButtonDown {
	border-style: solid;

	border-left-color: #000000;
	border-top-color: #000000;
	border-right-color: #7f7f7f;
	border-bottom-color: #7f7f7f;
	color: #000000;
	background-color: #ffffff;

	border-width: 2px;
	cursor: pointer;	
}

/*EndNavBarStyle*/

a{
	color: #0000FF;
}

a:visited{
	color: #0000CC;
}

a:hover{
	color: #0000FF;
}

div.CardStyle {
	position: absolute;
	font-family: Geneva,Arial,sans-serif;
	font-size: 100%;
	padding: 5px;
	border-style: solid;
	border-width: 1px;
	color: #000000;
	background-color: #FFCCCC;
	left: -50px;
	top: -50px;
	overflow: visible;
}

.rtl{
	text-align: right;
	font-size: 140%;
}


</style>

<script type="text/javascript">

//<![CDATA[

<!--




function Client(){
//if not a DOM browser, hopeless
	this.min = false; if (document.getElementById){this.min = true;};

	this.ua = navigator.userAgent;
	this.name = navigator.appName;
	this.ver = navigator.appVersion;  

//Get data about the browser
	this.mac = (this.ver.indexOf('Mac') != -1);
	this.win = (this.ver.indexOf('Windows') != -1);

//Look for Gecko
	this.gecko = (this.ua.indexOf('Gecko') > 1);
	if (this.gecko){
		this.geckoVer = parseInt(this.ua.substring(this.ua.indexOf('Gecko')+6, this.ua.length));
//		if (this.geckoVer < 20020000){this.min = false;}
	}
	
//Look for Firebird
	this.firebird = (this.ua.indexOf('Firebird') > 1);
	
//Look for Safari
	this.safari = (this.ua.indexOf('Safari') > 1);
	if (this.safari){
		this.gecko = false;
	}
	
//Look for IE
	this.ie = (this.ua.indexOf('MSIE') > 0);
	if (this.ie){
		this.ieVer = parseFloat(this.ua.substring(this.ua.indexOf('MSIE')+5, this.ua.length));
		if (this.ieVer < 5.5){this.min = false;}
	}
	
//Look for Opera
	this.opera = (this.ua.indexOf('Opera') > 0);
	if (this.opera){
		this.operaVer = parseFloat(this.ua.substring(this.ua.indexOf('Opera')+6, this.ua.length));
		if (this.operaVer < 7.04){this.min = false;}
	}
	if (this.min == false){
//		alert('Your browser may not be able to handle this page.');
	}
	
//Special case for the horrible ie5mac
	this.ie5mac = (this.ie&&this.mac&&(this.ieVer<6));
}

var C = new Client();

//for (prop in C){
//	alert(prop + ': ' + C[prop]);
//}



//CODE FOR HANDLING NAV BUTTONS AND FUNCTION BUTTONS

//[strNavBarJS]
function NavBtnOver(Btn){
	if (Btn.className != 'NavButtonDown'){Btn.className = 'NavButtonUp';}
}

function NavBtnOut(Btn){
	Btn.className = 'NavButton';
}

function NavBtnDown(Btn){
	Btn.className = 'NavButtonDown';
}
//[/strNavBarJS]

function FuncBtnOver(Btn){
	if (Btn.className != 'FuncButtonDown'){Btn.className = 'FuncButtonUp';}
}

function FuncBtnOut(Btn){
	Btn.className = 'FuncButton';
}

function FuncBtnDown(Btn){
	Btn.className = 'FuncButtonDown';
}

function FocusAButton(){
	if (document.getElementById('CheckButton1') != null){
		document.getElementById('CheckButton1').focus();
	}
	else{
		if (document.getElementById('CheckButton2') != null){
			document.getElementById('CheckButton2').focus();
		}
		else{
			document.getElementsByTagName('button')[0].focus();
		}
	}
}




//CODE FOR HANDLING DISPLAY OF POPUP FEEDBACK BOX

var topZ = 1000;

function ShowMessage(Feedback){
	var Output = Feedback + '<br /><br />';
	document.getElementById('FeedbackContent').innerHTML = Output;
	var FDiv = document.getElementById('FeedbackDiv');
	topZ++;
	FDiv.style.zIndex = topZ;
	FDiv.style.top = TopSettingWithScrollOffset(30) + 'px';

	FDiv.style.display = 'block';

	ShowElements(false, 'input');
	ShowElements(false, 'select');
	ShowElements(false, 'object');
	ShowElements(true, 'object', 'FeedbackContent');

//Focus the OK button
	setTimeout("document.getElementById('FeedbackOKButton').focus()", 50);
	
//
//	RefreshImages();
//
}

function ShowElements(Show, TagName, ContainerToReverse){
// added third argument to allow objects in the feedback box to appear
//IE bug -- hide all the form elements that will show through the popup
//FF on Mac bug : doesn't redisplay objects whose visibility is set to visible
//unless the object's display property is changed

	//get container object (by Id passed in, or use document otherwise)
	TopNode = document.getElementById(ContainerToReverse);
	var Els;
	if (TopNode != null) {
		Els = TopNode.getElementsByTagName(TagName);
	} else {
		Els = document.getElementsByTagName(TagName);
	}

	for (var i=0; i<Els.length; i++){
		if (TagName == "object") {
			//manipulate object elements in all browsers
			if (Show == true){
				Els[i].style.visibility = 'visible';
				//get Mac FireFox to manipulate display, to force screen redraw
				if (C.mac && C.gecko) {Els[i].style.display = '';}
			}
			else{
				Els[i].style.visibility = 'hidden';
				if (C.mac && C.gecko) {Els[i].style.display = 'none';}
			}
		} 
		else {
			// tagName is either input or select (that is, Form Elements)
			// ie6 has a problem with Form elements, so manipulate those
			if (C.ie) {
				if (C.ieVer < 7) {
					if (Show == true){
						Els[i].style.visibility = 'visible';
					}
					else{
						Els[i].style.visibility = 'hidden';
					}
				}
			}
		}
	}
}



function HideFeedback(){
	document.getElementById('FeedbackDiv').style.display = 'none';
	ShowElements(true, 'input');
	ShowElements(true, 'select');
	ShowElements(true, 'object');
	if (Finished == true){
		Finish();
	}
}


//GENERAL UTILITY FUNCTIONS AND VARIABLES

//PAGE DIMENSION FUNCTIONS
function PageDim(){
//Get the page width and height
	this.W = 600;
	this.H = 400;
	this.W = document.getElementsByTagName('body')[0].clientWidth;
	this.H = document.getElementsByTagName('body')[0].clientHeight;
}

var pg = null;

function GetPageXY(El) {
	var XY = {x: 0, y: 0};
	while(El){
		XY.x += El.offsetLeft;
		XY.y += El.offsetTop;
		El = El.offsetParent;
	}
	return XY;
}

function GetScrollTop(){
	if (typeof(window.pageYOffset) == 'number'){
		return window.pageYOffset;
	}
	else{
		if ((document.body)&&(document.body.scrollTop)){
			return document.body.scrollTop;
		}
		else{
			if ((document.documentElement)&&(document.documentElement.scrollTop)){
				return document.documentElement.scrollTop;
			}
			else{
				return 0;
			}
		}
	}
}

function GetViewportHeight(){
	if (typeof window.innerHeight != 'undefined'){
		return window.innerHeight;
	}
	else{
		if (((typeof document.documentElement != 'undefined')&&(typeof document.documentElement.clientHeight !=
     'undefined'))&&(document.documentElement.clientHeight != 0)){
			return document.documentElement.clientHeight;
		}
		else{
			return document.getElementsByTagName('body')[0].clientHeight;
		}
	}
}

function TopSettingWithScrollOffset(TopPercent){
	var T = Math.floor(GetViewportHeight() * (TopPercent/100));
	return GetScrollTop() + T; 
}

//CODE FOR AVOIDING LOSS OF DATA WHEN BACKSPACE KEY INVOKES history.back()
var InTextBox = false;

function SuppressBackspace(e){ 
	if (InTextBox == true){return;}
	if (C.ie) {
		thisKey = window.event.keyCode;
	}
	else {
		thisKey = e.keyCode;
	}

	var Suppress = false;

	if (thisKey == 8) {
		Suppress = true;
	}

	if (Suppress == true){
		if (C.ie){
			window.event.returnValue = false;	
			window.event.cancelBubble = true;
		}
		else{
			e.preventDefault();
		}
	}
}

if (C.ie){
	document.attachEvent('onkeydown',SuppressBackspace);
	window.attachEvent('onkeydown',SuppressBackspace);
}
else{
	if (window.addEventListener){
		window.addEventListener('keypress',SuppressBackspace,false);
	}
}

function ReduceItems(InArray, ReduceToSize){
	var ItemToDump=0;
	var j=0;
	while (InArray.length > ReduceToSize){
		ItemToDump = Math.floor(InArray.length*Math.random());
		InArray.splice(ItemToDump, 1);
	}
}

function Shuffle(InArray){
	var Num;
	var Temp = new Array();
	var Len = InArray.length;

	var j = Len;

	for (var i=0; i<Len; i++){
		Temp[i] = InArray[i];
	}

	for (i=0; i<Len; i++){
		Num = Math.floor(j  *  Math.random());
		InArray[i] = Temp[Num];

		for (var k=Num; k < (j-1); k++) {
			Temp[k] = Temp[k+1];
		}
		j--;
	}
	return InArray;
}

function WriteToInstructions(Feedback) {
	document.getElementById('InstructionsDiv').innerHTML = Feedback;

	RefreshImages();

}



Imgs = new Array();

function PreloadImages(){
	var a = PreloadImages.arguments;
	for (var i=0; i<a.length; i++){
		Imgs[i] = new Image();
		Imgs[i].src = a[i];
	}
}

function RefreshImages(){
	for (var i=0; i<document.images.length; i++){
		if (document.images[i].name.substring(0,6) != 'NavBar'){
			document.images[i].src = document.images[i].src;
		}
	}
}


function EscapeDoubleQuotes(InString){
	return InString.replace(/"/g, '&quot;')
}

function TrimString(InString){
        var x = 0;

        if (InString.length != 0) {
                while ((InString.charAt(InString.length - 1) == '\u0020') || (InString.charAt(InString.length - 1) == '\u000A') || (InString.charAt(InString.length - 1) == '\u000D')){
                        InString = InString.substring(0, InString.length - 1)
                }

                while ((InString.charAt(0) == '\u0020') || (InString.charAt(0) == '\u000A') || (InString.charAt(0) == '\u000D')){
                        InString = InString.substring(1, InString.length)
                }

                while (InString.indexOf('  ') != -1) {
                        x = InString.indexOf('  ')
                        InString = InString.substring(0, x) + InString.substring(x+1, InString.length)
                 }

                return InString;
        }

        else {
                return '';
        }
}

function FindLongest(InArray){
	if (InArray.length < 1){return -1;}

	var Longest = 0;
	for (var i=1; i<InArray.length; i++){
		if (InArray[i].length > InArray[Longest].length){
			Longest = i;
		}
	}
	return Longest;
}

//UNICODE CHARACTER FUNCTIONS
function IsCombiningDiacritic(CharNum){
	var Result = (((CharNum >= 0x0300)&&(CharNum <= 0x370))||((CharNum >= 0x20d0)&&(CharNum <= 0x20ff)));
	Result = Result || (((CharNum >= 0x3099)&&(CharNum <= 0x309a))||((CharNum >= 0xfe20)&&(CharNum <= 0xfe23)));
	return Result;
}

function IsCJK(CharNum){
	return ((CharNum >= 0x3000)&&(CharNum < 0xd800));
}

//SETUP FUNCTIONS
//BROWSER WILL REFILL TEXT BOXES FROM CACHE IF NOT PREVENTED
function ClearTextBoxes(){
	var NList = document.getElementsByTagName('input');
	for (var i=0; i<NList.length; i++){
		if ((NList[i].id.indexOf('Guess') > -1)||(NList[i].id.indexOf('Gap') > -1)){
			NList[i].value = '';
		}
		if (NList[i].id.indexOf('Chk') > -1){
			NList[i].checked = '';
		}
	}
}

//EXTENSION TO ARRAY OBJECT
function Array_IndexOf(Input){
	var Result = -1;
	for (var i=0; i<this.length; i++){
		if (this[i] == Input){
			Result = i;
		}
	}
	return Result;
}
Array.prototype.indexOf = Array_IndexOf;

//IE HAS RENDERING BUG WITH BOTTOM NAVBAR
function RemoveBottomNavBarForIE(){
	if ((C.ie)&&(document.getElementById('Reading') != null)){
		if (document.getElementById('BottomNavBar') != null){
			document.getElementById('TheBody').removeChild(document.getElementById('BottomNavBar'));
		}
	}
}




//HOTPOTNET-RELATED CODE

var HPNStartTime = (new Date()).getTime();
var SubmissionTimeout = 30000;
var Detail = ''; //Global that is used to submit tracking data

function Finish(){
//If there's a form, fill it out and submit it
	if (document.store != null){
		Frm = document.store;
		Frm.starttime.value = HPNStartTime;
		Frm.endtime.value = (new Date()).getTime();
		Frm.mark.value = Score;
		Frm.detail.value = Detail;
		Frm.submit();
	}
}





//JQUIZ CORE JAVASCRIPT CODE

var CurrQNum = 0;
var CorrectIndicator = '+';
var IncorrectIndicator = 'X';
var YourScoreIs = 'Votre score obtenu est : ';

//New for 6.2.2.0
var CompletedSoFar = 'Questions compl&#x00E9;t&#x00E9;es : ';
var ExerciseCompleted = 'Vous avez compl&#x00E9;t&#x00E9; l\'exercice.';
var ShowCompletedSoFar = true;

var ContinuousScoring = true;
var CorrectFirstTime = 'R&#x00E9;ponses justes au premier essai : ';
var ShowCorrectFirstTime = true;
var ShuffleQs = false;
var ShuffleAs = true;
var DefaultRight = 'R&#x00E9;ponse juste!';
var DefaultWrong = 'R&#x00E9;ponse fausse!';
var QsToShow = 20;
var Score = 0;
var Finished = false;
var Qs = null;
var QArray = new Array();
var ShowingAllQuestions = false;
var ShowAllQuestionsCaption = 'Afficher toutes les questions.';
var ShowOneByOneCaption = 'Voir les questions une par une.';
var State = new Array();
var Feedback = '';
var TimeOver = false;
var strInstructions = '';
var Locked = false;

//The following variable can be used to add a message explaining that
//the question is finished, so no further marking will take place.
var strQuestionFinished = '';

function CompleteEmptyFeedback(){
	var QNum, ANum;
	for (QNum=0; QNum<I.length; QNum++){
//Only do this if not multi-select
		if (I[QNum][2] != '3'){
  		for (ANum = 0; ANum<I[QNum][3].length; ANum++){
  			if (I[QNum][3][ANum][1].length < 1){
  				if (I[QNum][3][ANum][2] > 0){
  					I[QNum][3][ANum][1] = DefaultRight;
  				}
  				else{
  					I[QNum][3][ANum][1] = DefaultWrong;
  				}
  			}
  		}
		}
	}
}

function SetUpQuestions(){
	var AList = new Array(); 
	var QList = new Array();
	var i, j;
	Qs = document.getElementById('Questions');
	while (Qs.getElementsByTagName('li').length > 0){
		QList.push(Qs.removeChild(Qs.getElementsByTagName('li')[0]));
	}
	var DumpItem = 0;
	if (QsToShow > QList.length){
		QsToShow = QList.length;
	}
	while (QsToShow < QList.length){
		DumpItem = Math.floor(QList.length*Math.random());
		for (j=DumpItem; j<(QList.length-1); j++){
			QList[j] = QList[j+1];
		}
		QList.length = QList.length-1;
	}
	if (ShuffleQs == true){
		QList = Shuffle(QList);
	}
	if (ShuffleAs == true){
		var As;
		for (var i=0; i<QList.length; i++){
			As = QList[i].getElementsByTagName('ol')[0];
			if (As != null){
  			AList.length = 0;
				while (As.getElementsByTagName('li').length > 0){
					AList.push(As.removeChild(As.getElementsByTagName('li')[0]));
				}
				AList = Shuffle(AList);
				for (j=0; j<AList.length; j++){
					As.appendChild(AList[j]);
				}
			}
		}
	}
	
	for (i=0; i<QList.length; i++){
		Qs.appendChild(QList[i]);
		QArray[QArray.length] = QList[i];
	}

//Show the first item
	QArray[0].style.display = '';
	
//Now hide all except the first item
	for (i=1; i<QArray.length; i++){
		QArray[i].style.display = 'none';
	}		
	SetQNumReadout();
	
	SetFocusToTextbox();
}

function SetFocusToTextbox(){
//if there's a textbox, set the focus in it
	if (QArray[CurrQNum].getElementsByTagName('input')[0] != null){
		QArray[CurrQNum].getElementsByTagName('input')[0].focus();
//and show a keypad if there is one
		if (document.getElementById('CharacterKeypad') != null){
			document.getElementById('CharacterKeypad').style.display = 'block';
		}
	}
	else{
  	if (QArray[CurrQNum].getElementsByTagName('textarea')[0] != null){
  		QArray[CurrQNum].getElementsByTagName('textarea')[0].focus();	
//and show a keypad if there is one
			if (document.getElementById('CharacterKeypad') != null){
				document.getElementById('CharacterKeypad').style.display = 'block';
			}
		}
//This added for 6.0.4.11: hide accented character buttons if no textbox
		else{
			if (document.getElementById('CharacterKeypad') != null){
				document.getElementById('CharacterKeypad').style.display = 'none';
			}
		}
	}
}

function ChangeQ(ChangeBy){
//The following line prevents moving to another question until the current
//question is answered correctly. Uncomment it to enable this behaviour. 
//	if (State[CurrQNum][0] == -1){return;}
	if (((CurrQNum + ChangeBy) < 0)||((CurrQNum + ChangeBy) >= QArray.length)){return;}
	QArray[CurrQNum].style.display = 'none';
	CurrQNum += ChangeBy;
	QArray[CurrQNum].style.display = '';
//Undocumented function added 10/12/2004
	ShowSpecialReadingForQuestion();
	SetQNumReadout();
	SetFocusToTextbox();
}

var HiddenReadingShown = false;
function ShowSpecialReadingForQuestion(){
//Undocumented function for showing specific reading text elements which change with each question
//Added on 10/12/2004
	if (document.getElementById('ReadingDiv') != null){
		if (HiddenReadingShown == true){
			document.getElementById('ReadingDiv').innerHTML = '';
		}
		if (QArray[CurrQNum] != null){
//Fix for 6.0.4.25
			var Children = QArray[CurrQNum].getElementsByTagName('div');
			for (var i=0; i<Children.length; i++){
			if (Children[i].className=="HiddenReading"){
					document.getElementById('ReadingDiv').innerHTML = Children[i].innerHTML;
					HiddenReadingShown = true;
//Hide the ShowAllQuestions button to avoid confusion
					if (document.getElementById('ShowMethodButton') != null){
						document.getElementById('ShowMethodButton').style.display = 'none';
					}
				}
			}	
		}
	}
}

function SetQNumReadout(){
	document.getElementById('QNumReadout').innerHTML = (CurrQNum+1) + ' / ' + QArray.length;
	if ((CurrQNum+1) >= QArray.length){
		if (document.getElementById('NextQButton') != null){
			document.getElementById('NextQButton').style.visibility = 'hidden';
		}
	}
	else{
		if (document.getElementById('NextQButton') != null){
			document.getElementById('NextQButton').style.visibility = 'visible';
		}
	}
	if (CurrQNum <= 0){
		if (document.getElementById('PrevQButton') != null){
			document.getElementById('PrevQButton').style.visibility = 'hidden';
		}
	}
	else{
		if (document.getElementById('PrevQButton') != null){
			document.getElementById('PrevQButton').style.visibility = 'visible';
		}
	}
}

var I=new Array();
I[0]=new Array();I[0][0]=100;
I[0][1]='';
I[0][2]='1';
I[0][3]=new Array();
I[0][3][0]=new Array('La comparaison','Bravo!',1,100,1);
I[0][3][1]=new Array('La comparaison.','Bravo!',1,100,1);
I[0][3][2]=new Array('Comparaison','Bravo!',1,100,1);
I[0][3][3]=new Array('Une comparaison','Bravo!',1,100,1);
I[0][3][4]=new Array('Une comparaison','Bravo!',1,100,1);
I[0][3][5]=new Array('Une comparaison.','Bravo!',1,100,1);
I[1]=new Array();I[1][0]=100;
I[1][1]='';
I[1][2]='1';
I[1][3]=new Array();
I[1][3][0]=new Array('La m\u00E9taphore','Bravo!',1,100,1);
I[1][3][1]=new Array('La m\u00E9taphore.','Bravo!',1,100,1);
I[1][3][2]=new Array('M\u00E9taphore','Bravo!',1,100,1);
I[1][3][3]=new Array('Une m\u00E9taphore','Bravo!',1,100,1);
I[1][3][4]=new Array('Une m\u00E9taphore','Bravo!',1,100,1);
I[1][3][5]=new Array('Une m\u00E9taphore.','Bravo!',1,100,1);
I[2]=new Array();I[2][0]=100;
I[2][1]='';
I[2][2]='1';
I[2][3]=new Array();
I[2][3][0]=new Array('La personnification','Bravo!',1,100,1);
I[2][3][1]=new Array('La personnification.','Bravo!',1,100,1);
I[2][3][2]=new Array('Personnification','Bravo!',1,100,1);
I[2][3][3]=new Array('Une personnification','Bravo!',1,100,1);
I[2][3][4]=new Array('Une personnification','Bravo!',1,100,1);
I[2][3][5]=new Array('Une personnification.','Bravo!',1,100,1);
I[3]=new Array();I[3][0]=100;
I[3][1]='';
I[3][2]='1';
I[3][3]=new Array();
I[3][3][0]=new Array('La m\u00E9tonymie','Bravo!',1,100,1);
I[3][3][1]=new Array('La m\u00E9tonymie.','Bravo!',1,100,1);
I[3][3][2]=new Array('M\u00E9tonymie','Bravo!',1,100,1);
I[3][3][3]=new Array('Une m\u00E9tonymie','Bravo!',1,100,1);
I[3][3][4]=new Array('Une m\u00E9tonymie','Bravo!',1,100,1);
I[3][3][5]=new Array('Une m\u00E9tonymie.','Bravo!',1,100,1);
I[4]=new Array();I[4][0]=100;
I[4][1]='';
I[4][2]='1';
I[4][3]=new Array();
I[4][3][0]=new Array('La p\u00E9riphrase','Bravo!',1,100,1);
I[4][3][1]=new Array('La p\u00E9riphrase.','Bravo!',1,100,1);
I[4][3][2]=new Array('P\u00E9riphrase','Bravo!',1,100,1);
I[4][3][3]=new Array('Une p\u00E9riphrase','Bravo!',1,100,1);
I[4][3][4]=new Array('Une p\u00E9riphrase','Bravo!',1,100,1);
I[4][3][5]=new Array('Une p\u00E9riphrase.','Bravo!',1,100,1);
I[5]=new Array();I[5][0]=100;
I[5][1]='';
I[5][2]='1';
I[5][3]=new Array();
I[5][3][0]=new Array('L\'\u00E9num\u00E9ration','Bravo!',1,100,1);
I[5][3][1]=new Array('L\'\u00E9num\u00E9ration.','Bravo!',1,100,1);
I[5][3][2]=new Array('\u00E9num\u00E9ration','Bravo!',1,100,1);
I[5][3][3]=new Array('Une \u00E9num\u00E9ration','Bravo!',1,100,1);
I[5][3][4]=new Array('Une \u00E9num\u00E9ration','Bravo!',1,100,1);
I[5][3][5]=new Array('Une \u00E9num\u00E9ration.','Bravo!',1,100,1);
I[6]=new Array();I[6][0]=100;
I[6][1]='';
I[6][2]='1';
I[6][3]=new Array();
I[6][3][0]=new Array('L\'anaphore','Bravo!',1,100,1);
I[6][3][1]=new Array('L\'anaphore.','Bravo!',1,100,1);
I[6][3][2]=new Array('Anaphore','Bravo!',1,100,1);
I[6][3][3]=new Array('Une anaphore','Bravo!',1,100,1);
I[6][3][4]=new Array('Une anaphore','Bravo!',1,100,1);
I[6][3][5]=new Array('Une anaphore.','Bravo!',1,100,1);
I[7]=new Array();I[7][0]=100;
I[7][1]='';
I[7][2]='1';
I[7][3]=new Array();
I[7][3][0]=new Array('L\'hyperbole','Bravo!',1,100,1);
I[7][3][1]=new Array('L\'hyperbole.','Bravo!',1,100,1);
I[7][3][2]=new Array('Hyperbole','Bravo!',1,100,1);
I[7][3][3]=new Array('Une hyperbole','Bravo!',1,100,1);
I[7][3][4]=new Array('Une hyperbole','Bravo!',1,100,1);
I[7][3][5]=new Array('Une hyperbole.','Bravo!',1,100,1);
I[8]=new Array();I[8][0]=100;
I[8][1]='';
I[8][2]='1';
I[8][3]=new Array();
I[8][3][0]=new Array('L\'antith\u00E8se','Bravo!',1,100,1);
I[8][3][1]=new Array('L\'antith\u00E8se.','Bravo!',1,100,1);
I[8][3][2]=new Array('Antith\u00E8se','Bravo!',1,100,1);
I[8][3][3]=new Array('Une antith\u00E8se','Bravo!',1,100,1);
I[8][3][4]=new Array('Une antith\u00E8se','Bravo!',1,100,1);
I[8][3][5]=new Array('Une antith\u00E8se.','Bravo!',1,100,1);
I[9]=new Array();I[9][0]=100;
I[9][1]='';
I[9][2]='1';
I[9][3]=new Array();
I[9][3][0]=new Array('L\'oxymore','Bravo!',1,100,1);
I[9][3][1]=new Array('L\'oxymore.','Bravo!',1,100,1);
I[9][3][2]=new Array('Oxymore','Bravo!',1,100,1);
I[9][3][3]=new Array('Un oxymore','Bravo!',1,100,1);
I[9][3][4]=new Array('Un oxymore','Bravo!',1,100,1);
I[9][3][5]=new Array('Un oxymore.','Bravo!',1,100,1);
I[10]=new Array();I[10][0]=100;
I[10][1]='';
I[10][2]='1';
I[10][3]=new Array();
I[10][3][0]=new Array('L\'antiphrase','Bravo!',1,100,1);
I[10][3][1]=new Array('L\'antiphrase.','Bravo!',1,100,1);
I[10][3][2]=new Array('Antiphrase','Bravo!',1,100,1);
I[10][3][3]=new Array('Une antiphrase','Bravo!',1,100,1);
I[10][3][4]=new Array('Une antiphrase','Bravo!',1,100,1);
I[10][3][5]=new Array('Une antiphrase.','Bravo!',1,100,1);
I[11]=new Array();I[11][0]=100;
I[11][1]='';
I[11][2]='1';
I[11][3]=new Array();
I[11][3][0]=new Array('L\'euph\u00E9misme','Bravo!',1,100,1);
I[11][3][1]=new Array('L\'euph\u00E9misme.','Bravo!',1,100,1);
I[11][3][2]=new Array('euph\u00E9misme','Bravo!',1,100,1);
I[11][3][3]=new Array('Un euph\u00E9misme','Bravo!',1,100,1);
I[11][3][4]=new Array('Un euph\u00E9misme','Bravo!',1,100,1);
I[11][3][5]=new Array('Un euph\u00E9misme.','Bravo!',1,100,1);
I[12]=new Array();I[12][0]=100;
I[12][1]='';
I[12][2]='1';
I[12][3]=new Array();
I[12][3][0]=new Array('La gradation','Bravo!',1,100,1);
I[12][3][1]=new Array('La gradation.','Bravo!',1,100,1);
I[12][3][2]=new Array('Gradation','Bravo!',1,100,1);
I[12][3][3]=new Array('Une gradation','Bravo!',1,100,1);
I[12][3][4]=new Array('Une gradation','Bravo!',1,100,1);
I[12][3][5]=new Array('Une gradation.','Bravo!',1,100,1);
I[13]=new Array();I[13][0]=100;
I[13][1]='';
I[13][2]='1';
I[13][3]=new Array();
I[13][3][0]=new Array('La litote','Bravo!',1,100,1);
I[13][3][1]=new Array('La litote.','Bravo!',1,100,1);
I[13][3][2]=new Array('Litote','Bravo!',1,100,1);
I[13][3][3]=new Array('Une litote','Bravo!',1,100,1);
I[14]=new Array();I[14][0]=100;
I[14][1]='';
I[14][2]='1';
I[14][3]=new Array();
I[14][3][0]=new Array('synecdoque','Bravo!',1,100,1);
I[14][3][1]=new Array('La synecdoque','Bravo!',1,100,1);
I[14][3][2]=new Array('Une synecdoque','Bravo!',1,100,1);
I[15]=new Array();I[15][0]=100;
I[15][1]='';
I[15][2]='1';
I[15][3]=new Array();
I[15][3][0]=new Array('chiasme','Bravo!',1,100,1);
I[15][3][1]=new Array('Le chiasme','Bravo!',1,100,1);
I[15][3][2]=new Array('Un chiasme','Bravo!',1,100,1);
I[16]=new Array();I[16][0]=100;
I[16][1]='';
I[16][2]='1';
I[16][3]=new Array();
I[16][3][0]=new Array('all\u00E9gorie','Bravo!',1,100,1);
I[16][3][1]=new Array('L\'all\u00E9gorie','Bravo!',1,100,1);
I[16][3][2]=new Array('Une all\u00E9gorie','Bravo!',1,100,1);
I[17]=new Array();I[17][0]=100;
I[17][1]='';
I[17][2]='1';
I[17][3]=new Array();
I[17][3][0]=new Array('redondance','Bravo!',1,100,1);
I[17][3][1]=new Array('La redondance','Bravo!',1,100,1);
I[17][3][2]=new Array('Une redondance','Bravo!',1,100,1);
I[18]=new Array();I[18][0]=100;
I[18][1]='';
I[18][2]='1';
I[18][3]=new Array();
I[18][3][0]=new Array('r\u00E9p\u00E9tition','Bravo!',1,100,1);
I[18][3][1]=new Array('La r\u00E9p\u00E9tition','Bravo!',1,100,1);
I[18][3][2]=new Array('Une r\u00E9p\u00E9tition','Bravo!',1,100,1);
I[19]=new Array();I[19][0]=100;
I[19][1]='';
I[19][2]='1';
I[19][3]=new Array();
I[19][3][0]=new Array('ellipse','Bravo!',1,100,1);
I[19][3][1]=new Array('L\'ellipse','Bravo!',1,100,1);
I[19][3][2]=new Array('Une ellipse','Bravo!',1,100,1);


function StartUp(){
	RemoveBottomNavBarForIE();

//If there's only one question, no need for question navigation controls
	if (QsToShow < 2){
		document.getElementById('QNav').style.display = 'none';
	}
	
//Stash the instructions so they can be redisplayed
	strInstructions = document.getElementById('InstructionsDiv').innerHTML;
	

	

	

	PreloadImages('../../Pictures/mes images/Bouchriha.JPG');

	
	CompleteEmptyFeedback();

	SetUpQuestions();
	ClearTextBoxes();
	CreateStatusArray();
	

	setTimeout('StartTimer()', 50);

	
//Check search string for q parameter
	if (document.location.search.length > 0){
		if (ShuffleQs == false){
			var JumpTo = parseInt(document.location.search.substring(1,document.location.search.length))-1;
			if (JumpTo <= QsToShow){
				ChangeQ(JumpTo);
			}
		}
	}
//Undocumented function added 10/12/2004
	ShowSpecialReadingForQuestion();
}

function ShowHideQuestions(){
	FuncBtnOut(document.getElementById('ShowMethodButton'));
	document.getElementById('ShowMethodButton').style.display = 'none';
	if (ShowingAllQuestions == false){
		for (var i=0; i<QArray.length; i++){
				QArray[i].style.display = '';
			}
		document.getElementById('Questions').style.listStyleType = 'decimal';
		document.getElementById('OneByOneReadout').style.display = 'none';
		document.getElementById('ShowMethodButton').innerHTML = ShowOneByOneCaption;
		ShowingAllQuestions = true;
	}
	else{
		for (var i=0; i<QArray.length; i++){
				if (i != CurrQNum){
					QArray[i].style.display = 'none';
				}
			}
		document.getElementById('Questions').style.listStyleType = 'none';
		document.getElementById('OneByOneReadout').style.display = '';
		document.getElementById('ShowMethodButton').innerHTML = ShowAllQuestionsCaption;
		ShowingAllQuestions = false;	
	}
	document.getElementById('ShowMethodButton').style.display = 'inline';
}

function CreateStatusArray(){
	var QNum, ANum;
//For each item in the item array
	for (QNum=0; QNum<I.length; QNum++){
//Check if the question still exists (hasn't been nuked by showing a random selection)
		if (document.getElementById('Q_' + QNum) != null){
			State[QNum] = new Array();
			State[QNum][0] = -1; //Score for this q; -1 shows question not done yet
			State[QNum][1] = new Array(); //answers
			for (ANum = 0; ANum<I[QNum][3].length; ANum++){
				State[QNum][1][ANum] = 0; //answer not chosen yet; when chosen, will store its position in the series of choices
			}
			State[QNum][2] = 0; //tries at this q so far
			State[QNum][3] = 0; //incrementing percent-correct values of selected answers
			State[QNum][4] = 0; //penalties incurred for hints
			State[QNum][5] = ''; //Sequence of answers chosen by number
		}
		else{
			State[QNum] = null;
		}
	}
}





function CalculateOverallScore(){
	var TotalWeighting = 0;
	var TotalScore = 0;
	
	for (var QNum=0; QNum<State.length; QNum++){
		if (State[QNum] != null){
			if (State[QNum][0] > -1){
				TotalWeighting += I[QNum][0];
				TotalScore += (I[QNum][0] * State[QNum][0]);
			}
		}
	}
	if (TotalWeighting > 0){
		Score = Math.floor((TotalScore/TotalWeighting)*100);
	}
	else{
//if TotalWeighting is 0, no questions so far have any value, so 
//no penalty should be shown.
		Score = 100; 
	}
}

//New for 6.2.2.0
function CheckQuestionsCompleted(){
	if (ShowCompletedSoFar == false){return '';}
	var QsCompleted = 0;
	for (var QNum=0; QNum<State.length; QNum++){
		if (State[QNum] != null){
			if (State[QNum][0] >= 0){
				QsCompleted++;
			}
		}
	}
//Fixes for 6.2.2.2
	if (QsCompleted >= QArray.length){
		return ExerciseCompleted;
	}
	else{
		return CompletedSoFar + ' ' + QsCompleted + '/' + QArray.length + '.';
	}
}

function CheckFinished(){
	var FB = '';
	var AllDone = true;
	for (var QNum=0; QNum<State.length; QNum++){
		if (State[QNum] != null){
			if (State[QNum][0] < 0){
				AllDone = false;
			}
		}
	}
	if (AllDone == true){
	
//Report final score and submit if necessary
		CalculateOverallScore();
		FB = YourScoreIs + ' ' + Score + '%.';
		if (ShowCorrectFirstTime == true){
			var CFT = 0;
			for (QNum=0; QNum<State.length; QNum++){
				if (State[QNum] != null){
					if (State[QNum][0] >= 1){
						CFT++;
					}
				}
			}
			FB += '<br />' + CorrectFirstTime + ' ' + CFT + '/' + QsToShow;
		}
		
//New for 6.2.2.0
		FB += '<br />' + ExerciseCompleted;
		
		WriteToInstructions(FB);
		
		Finished == true;

		window.clearInterval(Interval);




		TimeOver = true;
		Locked = true;
		


		Finished = true;
		Detail = '<?xml version="1.0"?><hpnetresult><fields>';
		for (QNum=0; QNum<State.length; QNum++){
			if (State[QNum] != null){
				if (State[QNum][5].length > 0){
					Detail += '<field><fieldname>Question #' + (QNum+1) + '</fieldname><fieldtype>question-tracking</fieldtype><fieldlabel>Q ' + (QNum+1) + '</fieldlabel><fieldlabelid>QuestionTrackingField</fieldlabelid><fielddata>' + State[QNum][5] + '</fielddata></field>';
				}
			}
		}
		Detail += '</fields></hpnetresult>';
		setTimeout('Finish()', SubmissionTimeout);
	}

}


function TimesUp(){
	document.getElementById('Timer').innerHTML = 'Votre temps est termin&#x00E9; !';

	RefreshImages();

	TimeOver = true;
	Finished = true;
	ShowMessage('Votre temps est termin&#x00E9; !');
	
//Set all remaining scores to 0
	for (var QNum=0; QNum<State.length; QNum++){
		if (State[QNum] != null){
			if (State[QNum][0] < 0){
				State[QNum][0] = 0;
			}
		}
	}
	CheckFinished();
}




//CORE CODE FOR CHECKING SHORT ANSWER GUESSES AGAINST ANSWER ARRAYS

var CaseSensitive = false;
var ShowAlsoCorrect = true;
var PleaseEnter = 'Proposition:';
var HybridTries = 2;
var PartlyIncorrect = 'Une partie de la r&#x00E9;ponse est fausse: ';
var CorrectList = 'Les bonnes r&#x00E9;ponses : ';
var NextCorrect = 'Indice: ';
var CurrBox = null;

function TrackFocus(BoxID){
	InTextBox = true;
	CurrBox = document.getElementById(BoxID);
}

function LeaveGap(){
	InTextBox = false;
}

function TypeChars(Chars){
	if (CurrBox != null){
//Following check added for 6.0.4.4 to avoid error message in IE6
		if (CurrBox.style.display != 'none'){
			CurrBox.value += Chars;
			CurrBox.focus();
		}
	}
}

function CheckGuess(Guess, Answer, CaseSensitive, PercentCorrect, Feedback){
	this.Guess = Guess;
	this.Answer = Answer;
	this.PercentCorrect = PercentCorrect;
	this.Feedback = Feedback;
	if (CaseSensitive == false){
		this.WorkingGuess = Guess.toLowerCase();
		this.WorkingAnswer = Answer.toLowerCase();
	}
	else{
		this.WorkingGuess = Guess;
		this.WorkingAnswer = Answer;				
	}
	this.Hint = '';
	this.HintPenalty = 1/Answer.length;
	this.CorrectStart = '';
	this.WrongMiddle = '';
	this.CorrectEnd = '';
	this.PercentMatch = 0;
	this.DoCheck();
}

function CheckGuess_DoCheck(){
//Check if it's an exact match
	if (this.WorkingAnswer == this.WorkingGuess){
		this.PercentMatch = 100;
		this.CorrectStart = this.Guess;
	return;
	}
//Figure out how much of the beginning is correct
	var i = 0;
	var CorrectChars = 0;
	while (this.WorkingAnswer.charAt(i) == this.WorkingGuess.charAt(i)){
		i++;
		CorrectChars++;
	}
//Stash the hint
	this.Hint = this.Answer.charAt(i);
	
	this.CorrectStart = this.Guess.substring(0, i);
	
//If there's more to the answer, look at the rest of it
	if (i<this.Guess.length){
	
//Figure out how much of the end is correct
		var j = this.WorkingGuess.length-1;
		var k = this.WorkingAnswer.length-1;
		while ((j>=i)&&((this.WorkingAnswer.charAt(k) == this.WorkingGuess.charAt(j))&&(CorrectChars < this.Answer.length))){
			CorrectChars++;
			j--;
			k--;
		}
		this.CorrectEnd = this.Guess.substring(j+1, this.Guess.length);
		this.WrongMiddle = this.Guess.substring(i, j+1);
	}
	if (TrimString(this.WrongMiddle).length < 1){this.WrongMiddle = '_';}
//Calculate match score based on how much of the guess is correct
	if (CorrectChars < this.Answer.length){
		this.PercentMatch = Math.floor(100*CorrectChars)/this.Answer.length;
	}
	else{
		this.PercentMatch = Math.floor((100 * CorrectChars)/this.Guess.length);
	}	
}

CheckGuess.prototype.DoCheck = CheckGuess_DoCheck;

function CheckAnswerArray(CaseSensitive){
	this.CaseSensitive = CaseSensitive;
	this.Answers = new Array();
	this.Score = 0;
	this.Feedback = '';
	this.Hint = '';
	this.HintPenalty = 0;
	this.MatchedAnswerLength = 1;
	this.CompleteMatch = false;
	this.MatchNum = -1;
}

function CheckAnswerArray_AddAnswer(Guess, Answer, PercentCorrect, Feedback){
	this.Answers.push(new CheckGuess(Guess, Answer, this.CaseSensitive, PercentCorrect, Feedback));
}

CheckAnswerArray.prototype.AddAnswer = CheckAnswerArray_AddAnswer;

function CheckAnswerArray_ClearAll(){
	this.Answers.length = 0;
}

CheckAnswerArray.prototype.ClearAll = CheckAnswerArray_ClearAll;

function CheckAnswerArray_GetBestMatch(){
//First check for a 100% match
	for (var i=0; i<this.Answers.length; i++){
		if (this.Answers[i].PercentMatch == 100){
			this.Feedback = this.Answers[i].Feedback;
			this.Score = this.Answers[i].PercentCorrect;
			this.CompleteMatch = true;
			this.MatchNum = i;
			return;
		}
	}
//Now check for the best alternative match
	var PercentMatch = 0;
	var BestMatch = -1;
	for (i=0; i<this.Answers.length; i++){
		if ((this.Answers[i].PercentMatch > PercentMatch)&&(this.Answers[i].PercentCorrect == 100)){
			BestMatch = i;
			PercentMatch = this.Answers[i].PercentMatch;
		}
	}
	if (BestMatch > -1){
		this.Score = this.Answers[BestMatch].PercentMatch;
		this.Feedback = PartlyIncorrect + ' ';
		this.Feedback += '<span class="PartialAnswer">' + this.Answers[BestMatch].CorrectStart;
		this.Feedback += '<span class="Highlight">' + this.Answers[BestMatch].WrongMiddle + '</span>';
		this.Feedback += this.Answers[BestMatch].CorrectEnd + '</span>';
		this.Hint = '<span class="PartialAnswer">' + this.Answers[BestMatch].CorrectStart;
		this.Hint += '<span class="Highlight">' + this.Answers[BestMatch].Hint + '</span></span>';
		this.HintPenalty = this.Answers[BestMatch].HintPenalty;
	}
	else{
		this.Score = 0;
		this.Feedback = '';
	}
}

CheckAnswerArray.prototype.GetBestMatch = CheckAnswerArray_GetBestMatch;

function CheckShortAnswer(QNum){
//bail if question doesn't exist or exercise finished
	if ((State[QNum].length < 1)||(Finished == true)){return;}
	
//bail if question already complete
	if (State[QNum][0] > -1){return;}

//Get the guess (TrimString added to fix bug for 6.0.4.3)
	var G = TrimString(document.getElementById('Q_' + QNum + '_Guess').value);
	
//If no guess, bail with message; no penalty
	if (G.length < 1){
		ShowMessage(PleaseEnter);
		return;
	}

//Increment tries
	State[QNum][2]++;
	
//Create a check object
	var CA = new CheckAnswerArray(CaseSensitive);

	CA.ClearAll();
	for (var ANum=0; ANum<I[QNum][3].length; ANum++){
		CA.AddAnswer(G, I[QNum][3][ANum][0], I[QNum][3][ANum][3], I[QNum][3][ANum][1]);
	}
	CA.GetBestMatch();
	
//Store any match in the state tracking field
	if (State[QNum][5].length > 0){State[QNum][5] += ' | ';}
	if (CA.MatchNum > -1){
		State[QNum][5] += String.fromCharCode(65+CA.MatchNum);
	}
//Else store the student's answer
	else{
		State[QNum][5] += G;
	}

//Add the percent correct value for this answer to the Q State (works for all
//situations, wrong or right)
	State[QNum][3] += CA.Score;
	
//Now branch, based on the nature of the match
//Is it a complete match?
	if (CA.CompleteMatch == true){
		
//Is it with a wrong answer, or a right answer?
		if (CA.Score == 100){
//It's right
			CalculateShortAnsQuestionScore(QNum);
			
//New for 6.2.2.0
			var QsDone = CheckQuestionsCompleted();
			
//Get correct answer list if required, assuming there are any other correct alternatives
			if (ShowAlsoCorrect == true){
				var AlsoCorrectList = GetCorrectList(QNum, G, false);
				if (AlsoCorrectList.length > 0){
					CA.Feedback += '<br />' + CorrectList + '<br />' + AlsoCorrectList;
				}
			}	
		
//Get the overall score and add it to the feedback
			if (ContinuousScoring == true){
				CalculateOverallScore();
				CA.Feedback += '<br />' + YourScoreIs + ' ' + Score + '%.' + '<br />' + QsDone;
				WriteToInstructions(YourScoreIs + ' ' + Score + '%.' + '<br />' + QsDone);
			}
			else{
				WriteToInstructions(QsDone);
			}
			ShowMessage(CA.Feedback);
//Put the answer in
			ReplaceGuessBox(QNum, G);
			CheckFinished();
			return;
		}
	}
	
//Otherwise, it's a match to a predicted wrong/partially correct, or a partial
//match to a right answer
	if (CA.Feedback.length < 1){CA.Feedback = DefaultWrong;}
//Remove any previous score unless exercise is finished (6.0.3.8+)
	if (Finished == false){
		WriteToInstructions(strInstructions);
	}	
	ShowMessage(CA.Feedback);

//If necessary, switch a hybrid question to m/c
	if (State[QNum][2] >= HybridTries){
		SwitchHybridDisplay(QNum);
	}
}

function CalculateShortAnsQuestionScore(QNum){
	var Tries = State[QNum][2] + State[QNum][4]; //include tries and hint penalties;
	var PercentCorrect = State[QNum][3];
	var HintPenalties = State[QNum][4];

//Make sure it's not already complete
	if (State[QNum][0] < 0){
		if (HintPenalties >= 1){
			State[QNum][0] = 0;
		}
		else{
			State[QNum][0] = (PercentCorrect/(100*Tries));
		}
		if (State[QNum][0] < 0){
			State[QNum][0] = 0;
		}
	}
}

function SwitchHybridDisplay(QNum){
	if (document.getElementById('Q_' + QNum + '_Hybrid_MC') != null){
		document.getElementById('Q_' + QNum + '_Hybrid_MC').style.display = '';
		if (document.getElementById('Q_' + QNum + '_SA') != null){
			document.getElementById('Q_' + QNum + '_SA').style.display = 'none';
		}
	}
}

function GetCorrectArray(QNum){
	var Result = new Array();
	for (var ANum=0; ANum<I[QNum][3].length; ANum++){
		if (I[QNum][3][ANum][2] == 1){ //This is an acceptable correct answer
			Result.push(I[QNum][3][ANum][0]);
		}
	}	
	return Result;
}

function GetCorrectList(QNum, Answer, IncludeAnswer){
	var As = GetCorrectArray(QNum);
	var Result = '';
	for (var ANum=0; ANum<As.length; ANum++){
		if ((IncludeAnswer == true)||(As[ANum] != Answer)){
			Result += As[ANum] + '<br />';
		}
	}
	return Result;
}

function GetFirstCorrectAnswer(QNum){
	var As = GetCorrectArray(QNum);
	if (As.length > 0){
		return As[0];
	}
	else{
		return '';
	}
}

function ReplaceGuessBox(QNum, Ans){
	if (document.getElementById('Q_' + QNum + '_SA') != null){
		var El = document.getElementById('Q_' + QNum + '_SA');
		while (El.childNodes.length > 0){
			El.removeChild(El.childNodes[0]);
		}
		var A = document.createElement('span');
		A.setAttribute('class', 'Answer');
		var T = document.createTextNode(Ans);
		A.appendChild(T);
		El.appendChild(A);
	}
}



function ShowAnswers(QNum){
//bail if question doesn't exist or exercise finished
	if ((State[QNum].length < 1)||(Finished == true)){return;}
	
//Get the answer list to display
	var Ans = GetCorrectList(QNum, '', false);
	Ans = CorrectList + '<br />' + Ans;
	
//Display feedback
	ShowMessage(Ans);
	
//Set the score for this question to 0 if no score yet 
	if (State[QNum][0] < 1){
		State[QNum][0] = 0;
	}

//Get the first correct answer
	var FirstAns = GetFirstCorrectAnswer(QNum);
	
//Replace the textbox
	ReplaceGuessBox(QNum, FirstAns);
	
//New for 6.2.2.0: Get scores and feedback
	var QsDone = CheckQuestionsCompleted();
	
	if (ContinuousScoring == true){
		CalculateOverallScore();
		WriteToInstructions(YourScoreIs + ' ' + Score + '%.' + '<br />' + QsDone);
	}
	
//This may be the last, so check finished status
	CheckFinished();
}





function ShowHint(QNum){
//bail if question doesn't exist or exercise finished
	if ((State[QNum].length < 1)||(Finished == true)){return;}
	
//bail if question already complete
	if (State[QNum][0] > -1){return;}

//Get the guess
	var G = document.getElementById('Q_' + QNum + '_Guess').value;
	
//If no guess, give the first correct bit
	if (G.length < 1){
		var Ans = GetFirstCorrectAnswer(QNum);
		var Hint = Ans.charAt(0);
		ShowMessage(NextCorrect + '<br />' + Hint);
//Penalty for hint
		State[QNum][4] += (1/Ans.length);
		return;
	}

//Increment tries
	State[QNum][2]++;
	
//Create a check object
	var CA = new CheckAnswerArray(CaseSensitive);

	CA.ClearAll();
	for (var ANum=0; ANum<I[QNum][3].length; ANum++){
//Use only correct answers
		if (I[QNum][3][ANum][2] == 1){
			CA.AddAnswer(G, I[QNum][3][ANum][0], I[QNum][3][ANum][3], I[QNum][3][ANum][1]);
		}
	}
	CA.GetBestMatch();
	if (CA.CompleteMatch == true){
//It's right!
		CheckShortAnswer(QNum);
		return;
	}
	else{
		if (CA.Hint.length > 0){
			ShowMessage(NextCorrect + '<br />' + CA.Hint);
			State[QNum][4] += CA.HintPenalty;
		}
		else{
			ShowMessage(DefaultWrong + '<br />' + NextCorrect + '<br />' + GetFirstCorrectAnswer(QNum).charAt(0));
		}
	}
}








//CODE FOR HANDLING TIMER
//Timer code
var Seconds = 840;
var Interval = null;

function StartTimer(){
	Interval = window.setInterval('DownTime()',1000);
	document.getElementById('TimerText').style.display = 'inline';
}

function DownTime(){
	var ss = Seconds % 60;
	if (ss<10){
		ss='0' + ss + '';
	}

	var mm = Math.floor(Seconds / 60);

	if (document.getElementById('Timer') == null){
		return;
	}

	document.getElementById('TimerText').innerHTML = mm + ':' + ss;
	if (Seconds < 1){
		window.clearInterval(Interval);
		TimeOver = true;
		TimesUp();
	}
	Seconds--;
}






//-->

//]]>

</script>


</head>

<body onload="StartUp()" id="TheBody" >

<!-- BeginTopNavButtons -->


<div class="NavButtonBar" id="TopNavBar">


<button class="NavButton" onfocus="NavBtnOver(this)" onblur="NavBtnOut(this)" onmouseover="NavBtnOver(this)" onmouseout="NavBtnOut(this)" onmousedown="NavBtnDown(this)" onmouseup="NavBtnOut(this)" onclick="history.back(); return false;">&lt;=</button>






</div>



<!-- EndTopNavButtons -->

<div class="Titles">
	<h2 class="ExerciseTitle"><a style="cursor: pointer; text-decoration: underline;" onclick="window.open('https://sites.google.com/site/francaislycee/');return false;">Les figures de style &#x00E0; <img src="../../Pictures/mes images/Bouchriha.JPG" alt="Bouchriha.JPG" title="Bouchriha" width="60" height="72" style="float: left;"></img>retenir</a></h2>

	<h3 class="ExerciseSubtitle">Questionnaire : Conna&#x00EE;tre les figures de style<br />La personnification- L'euph&#x00E9;misme- La redondance- La p&#x00E9;riphrase- L'ellipse- L'oxymore- La gradation- L'all&#x00E9;gorie- La m&#x00E9;tonymie- Le chiasme- L'antith&#x00E8;se- La r&#x00E9;p&#x00E9;tition- La comparaison- L'anaphore- L'hyperbole- La synecdoque- L'&#x00E9;num&#x00E9;ration- La litote- L'antiphrase- La m&#x00E9;taphore.</h3>


<div id="Timer"><span id="TimerText">&nbsp;&nbsp;</span></div>


</div>

<div id="InstructionsDiv" class="StdDiv">
	<div id="Instructions">Identifiez la figure de style &#x00E0; l'aide de la d&#x00E9;finition donn&#x00E9;e et des exemples.</div>
</div>




<div id="MainDiv" class="StdDiv">
 
<div id="QNav" class="QuestionNavigation">

<p style="text-align: right;">
<button id="ShowMethodButton" class="FuncButton" onfocus="FuncBtnOver(this)" onblur="FuncBtnOut(this)" onmouseover="FuncBtnOver(this)" onmouseout="FuncBtnOut(this)" onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOver(this)" onclick="ShowHideQuestions(); return false;">Afficher toutes les questions.</button>
</p>

<div id="OneByOneReadout">
<button id="PrevQButton" class="FuncButton" onfocus="FuncBtnOver(this)" onblur="FuncBtnOut(this)" onmouseover="FuncBtnOver(this)" onmouseout="FuncBtnOut(this)" onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOver(this)" onclick="ChangeQ(-1); return false;">&lt;=</button>

<span id="QNumReadout" class="QNum">&nbsp;</span>

<button id="NextQButton" class="FuncButton" onfocus="FuncBtnOver(this)" onblur="FuncBtnOut(this)" onmouseover="FuncBtnOver(this)" onmouseout="FuncBtnOut(this)" onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOver(this)" onclick="ChangeQ(1); return false;">=&gt;</button>
<br />
</div>

</div>
 
<ol class="QuizQuestions" id="Questions">
<li class="QuizQuestion" id="Q_0" style="display: none;"><div class="QuestionText">Figure de style qui r&#x00E9;v&#x00E8;le un point commun explicite entre deux &#x00E9;l&#x00E9;ments : le compar&#x00E9; et le comparant reli&#x00E9;s par un outil comparatif. <br />Exemples : &#x00AB; Son sourire est pareil &#x00E0; l'&#x00E9;clat du soleil &#x00BB;. &#x00AB; Il est rus&#x00E9; comme un renard &#x00BB;.<br /></div><div class="ShortAnswer" id="Q_0_SA"><form method="post" action="" onsubmit="return false;"><div><input type="text" id="Q_0_Guess" onfocus="TrackFocus('Q_0_Guess')" onblur="LeaveGap()" class="ShortAnswerBox" size="16"></input><br /><br /><button class="FuncButton" onfocus="FuncBtnOver(this)" onblur="FuncBtnOut(this)" onmouseover="FuncBtnOver(this)" onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOut(this)" onclick="CheckShortAnswer(0)">V&#x00E9;rifier</button><button class="FuncButton" onfocus="FuncBtnOver(this)" onblur="FuncBtnOut(this)" onmouseover="FuncBtnOver(this)" onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOut(this)" onclick="ShowHint(0)">Indice</button><button class="FuncButton" onfocus="FuncBtnOver(this)" onblur="FuncBtnOut(this)" onmouseover="FuncBtnOver(this)" onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOut(this)" onclick="ShowAnswers(0)">Afficher la r&#x00E9;ponse</button></div></form></div></li>
<li class="QuizQuestion" id="Q_1" style="display: none;"><div class="QuestionText">Figure de style qui r&#x00E9;v&#x00E8;le un point commun implicite entre deux &#x00E9;l&#x00E9;ments : le compar&#x00E9; (parfois sous-entendu) et le comparant sans les relier par un outil de comparaison. Exemples : &#x00AB; La vie est un long fleuve tranquille &#x00BB;. &#x00AB; Le lieutenant aboya un ordre &#x00BB;<br /></div><div class="ShortAnswer" id="Q_1_SA"><form method="post" action="" onsubmit="return false;"><div><input type="text" id="Q_1_Guess" onfocus="TrackFocus('Q_1_Guess')" onblur="LeaveGap()" class="ShortAnswerBox" size="14"></input><br /><br /><button class="FuncButton" onfocus="FuncBtnOver(this)" onblur="FuncBtnOut(this)" onmouseover="FuncBtnOver(this)" onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOut(this)" onclick="CheckShortAnswer(1)">V&#x00E9;rifier</button><button class="FuncButton" onfocus="FuncBtnOver(this)" onblur="FuncBtnOut(this)" onmouseover="FuncBtnOver(this)" onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOut(this)" onclick="ShowHint(1)">Indice</button><button class="FuncButton" onfocus="FuncBtnOver(this)" onblur="FuncBtnOut(this)" onmouseover="FuncBtnOver(this)" onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOut(this)" onclick="ShowAnswers(1)">Afficher la r&#x00E9;ponse</button></div></form></div></li>
<li class="QuizQuestion" id="Q_2" style="display: none;"><div class="QuestionText">Figure de style qui attribue des comportements humains &#x00E0; des animaux ou &#x00E0; des objets. <br />Exemples : &#x00AB; Le vent mugissait dans les branches et hurlait sous les portes &#x00BB;. &#x00AB; &#x00C9;tait-ce la rivi&#x00E8;re qui parlait plus haut? &#x00BB;.</div><div class="ShortAnswer" id="Q_2_SA"><form method="post" action="" onsubmit="return false;"><div><input type="text" id="Q_2_Guess" onfocus="TrackFocus('Q_2_Guess')" onblur="LeaveGap()" class="ShortAnswerBox" size="21"></input><br /><br /><button class="FuncButton" onfocus="FuncBtnOver(this)" onblur="FuncBtnOut(this)" onmouseover="FuncBtnOver(this)" onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOut(this)" onclick="CheckShortAnswer(2)">V&#x00E9;rifier</button><button class="FuncButton" onfocus="FuncBtnOver(this)" onblur="FuncBtnOut(this)" onmouseover="FuncBtnOver(this)" onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOut(this)" onclick="ShowHint(2)">Indice</button><button class="FuncButton" onfocus="FuncBtnOver(this)" onblur="FuncBtnOut(this)" onmouseover="FuncBtnOver(this)" onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOut(this)" onclick="ShowAnswers(2)">Afficher la r&#x00E9;ponse</button></div></form></div></li>
<li class="QuizQuestion" id="Q_3" style="display: none;"><div class="QuestionText">Figure de style qui consiste &#x00E0; remplacer un terme par un autre terme qui lui est li&#x00E9; par un rapport d'identit&#x00E9; : le contenant pour le contenu; le tout pour la partie; le lieu pour les gens qui y vivent; la mati&#x00E8;re pour l'objet. <br />Exemples : &#x00AB; je bois un verre &#x00BB; (le contenant d&#x00E9;signe le contenu). &#x00AB; Tout Paris accourut &#x00BB;. (Le nom de la ville d&#x00E9;signe l'ensemble des habitants).</div><div class="ShortAnswer" id="Q_3_SA"><form method="post" action="" onsubmit="return false;"><div><input type="text" id="Q_3_Guess" onfocus="TrackFocus('Q_3_Guess')" onblur="LeaveGap()" class="ShortAnswerBox" size="14"></input><br /><br /><button class="FuncButton" onfocus="FuncBtnOver(this)" onblur="FuncBtnOut(this)" onmouseover="FuncBtnOver(this)" onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOut(this)" onclick="CheckShortAnswer(3)">V&#x00E9;rifier</button><button class="FuncButton" onfocus="FuncBtnOver(this)" onblur="FuncBtnOut(this)" onmouseover="FuncBtnOver(this)" onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOut(this)" onclick="ShowHint(3)">Indice</button><button class="FuncButton" onfocus="FuncBtnOver(this)" onblur="FuncBtnOut(this)" onmouseover="FuncBtnOver(this)" onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOut(this)" onclick="ShowAnswers(3)">Afficher la r&#x00E9;ponse</button></div></form></div></li>
<li class="QuizQuestion" id="Q_4" style="display: none;"><div class="QuestionText">Figure de style qui consiste &#x00E0; remplacer un mot par une expression de m&#x00EA;me sens pour r&#x00E9;v&#x00E9;ler son originalit&#x00E9;. G&#x00E9;n&#x00E9;ralement, on remplace le mot par un groupe de mots qui le d&#x00E9;finit de fa&#x00E7;on imag&#x00E9;e.<br />Exemples : &#x00AB; la ville rouge&#x00BB; pour Marrakech. &#x00AB; Ob&#x00E9;is au cr&#x00E9;ateur de l'univers &#x00BB;. =Dieu.</div><div class="ShortAnswer" id="Q_4_SA"><form method="post" action="" onsubmit="return false;"><div><input type="text" id="Q_4_Guess" onfocus="TrackFocus('Q_4_Guess')" onblur="LeaveGap()" class="ShortAnswerBox" size="15"></input><br /><br /><button class="FuncButton" onfocus="FuncBtnOver(this)" onblur="FuncBtnOut(this)" onmouseover="FuncBtnOver(this)" onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOut(this)" onclick="CheckShortAnswer(4)">V&#x00E9;rifier</button><button class="FuncButton" onfocus="FuncBtnOver(this)" onblur="FuncBtnOut(this)" onmouseover="FuncBtnOver(this)" onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOut(this)" onclick="ShowHint(4)">Indice</button><button class="FuncButton" onfocus="FuncBtnOver(this)" onblur="FuncBtnOut(this)" onmouseover="FuncBtnOver(this)" onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOut(this)" onclick="ShowAnswers(4)">Afficher la r&#x00E9;ponse</button></div></form></div></li>
<li class="QuizQuestion" id="Q_5" style="display: none;"><div class="QuestionText">Figure de style dans laquelle on trouve une suite de mots ou de propositions qui sont de m&#x00EA;me nature (noms, verbes, etc.) et de m&#x00EA;me fonction (sujets, compl&#x00E9;ments, etc.).<br />Exemples : &#x00AB; J'avais un bon manteau, un casque noir, des pistolets et un grand sabre &#x00BB;. &#x00AB; Femmes, moine, vieillards, tout &#x00E9;tait descendu &#x00BB;.<br /></div><div class="ShortAnswer" id="Q_5_SA"><form method="post" action="" onsubmit="return false;"><div><input type="text" id="Q_5_Guess" onfocus="TrackFocus('Q_5_Guess')" onblur="LeaveGap()" class="ShortAnswerBox" size="16"></input><br /><br /><button class="FuncButton" onfocus="FuncBtnOver(this)" onblur="FuncBtnOut(this)" onmouseover="FuncBtnOver(this)" onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOut(this)" onclick="CheckShortAnswer(5)">V&#x00E9;rifier</button><button class="FuncButton" onfocus="FuncBtnOver(this)" onblur="FuncBtnOut(this)" onmouseover="FuncBtnOver(this)" onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOut(this)" onclick="ShowHint(5)">Indice</button><button class="FuncButton" onfocus="FuncBtnOver(this)" onblur="FuncBtnOut(this)" onmouseover="FuncBtnOver(this)" onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOut(this)" onclick="ShowAnswers(5)">Afficher la r&#x00E9;ponse</button></div></form></div></li>
<li class="QuizQuestion" id="Q_6" style="display: none;"><div class="QuestionText">Figure de style qui consiste &#x00E0; r&#x00E9;p&#x00E9;ter un mot ou groupe de mots en d&#x00E9;but de vers ou de phrase afin de cr&#x00E9;er un rythme particulier. <br />Exemple : &#x00AB; Que tu es belle, ma bien aim&#x00E9;e,/Que tu es belle! Cantique des Cantiques &#x00BB;<br /><br /></div><div class="ShortAnswer" id="Q_6_SA"><form method="post" action="" onsubmit="return false;"><div><input type="text" id="Q_6_Guess" onfocus="TrackFocus('Q_6_Guess')" onblur="LeaveGap()" class="ShortAnswerBox" size="13"></input><br /><br /><button class="FuncButton" onfocus="FuncBtnOver(this)" onblur="FuncBtnOut(this)" onmouseover="FuncBtnOver(this)" onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOut(this)" onclick="CheckShortAnswer(6)">V&#x00E9;rifier</button><button class="FuncButton" onfocus="FuncBtnOver(this)" onblur="FuncBtnOut(this)" onmouseover="FuncBtnOver(this)" onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOut(this)" onclick="ShowHint(6)">Indice</button><button class="FuncButton" onfocus="FuncBtnOver(this)" onblur="FuncBtnOut(this)" onmouseover="FuncBtnOver(this)" onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOut(this)" onclick="ShowAnswers(6)">Afficher la r&#x00E9;ponse</button></div></form></div></li>
<li class="QuizQuestion" id="Q_7" style="display: none;"><div class="QuestionText">Figure de style qui consiste &#x00E0; exag&#x00E9;rer la r&#x00E9;alit&#x00E9; de fa&#x00E7;on &#x00E0; frapper l'imagination. <br />Exemples : &#x00AB; Il est mort de rire &#x00BB;. &#x00AB; Je meurs de soif &#x00BB;. &#x00AB; Elle a vers&#x00E9; un torrent de larmes &#x00BB;.</div><div class="ShortAnswer" id="Q_7_SA"><form method="post" action="" onsubmit="return false;"><div><input type="text" id="Q_7_Guess" onfocus="TrackFocus('Q_7_Guess')" onblur="LeaveGap()" class="ShortAnswerBox" size="14"></input><br /><br /><button class="FuncButton" onfocus="FuncBtnOver(this)" onblur="FuncBtnOut(this)" onmouseover="FuncBtnOver(this)" onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOut(this)" onclick="CheckShortAnswer(7)">V&#x00E9;rifier</button><button class="FuncButton" onfocus="FuncBtnOver(this)" onblur="FuncBtnOut(this)" onmouseover="FuncBtnOver(this)" onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOut(this)" onclick="ShowHint(7)">Indice</button><button class="FuncButton" onfocus="FuncBtnOver(this)" onblur="FuncBtnOut(this)" onmouseover="FuncBtnOver(this)" onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOut(this)" onclick="ShowAnswers(7)">Afficher la r&#x00E9;ponse</button></div></form></div></li>
<li class="QuizQuestion" id="Q_8" style="display: none;"><div class="QuestionText">Figure de style qui consiste &#x00E0; rapprocher deux antonymes pour r&#x00E9;v&#x00E9;ler un contraste saisissant entre deux id&#x00E9;es. <br />Exemples : &#x00AB; Tu as choisi la vie, moi la mort &#x00BB;. &#x00AB; J'ai le mauvais r&#x00F4;le et tu as le bon &#x00BB;. </div><div class="ShortAnswer" id="Q_8_SA"><form method="post" action="" onsubmit="return false;"><div><input type="text" id="Q_8_Guess" onfocus="TrackFocus('Q_8_Guess')" onblur="LeaveGap()" class="ShortAnswerBox" size="14"></input><br /><br /><button class="FuncButton" onfocus="FuncBtnOver(this)" onblur="FuncBtnOut(this)" onmouseover="FuncBtnOver(this)" onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOut(this)" onclick="CheckShortAnswer(8)">V&#x00E9;rifier</button><button class="FuncButton" onfocus="FuncBtnOver(this)" onblur="FuncBtnOut(this)" onmouseover="FuncBtnOver(this)" onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOut(this)" onclick="ShowHint(8)">Indice</button><button class="FuncButton" onfocus="FuncBtnOver(this)" onblur="FuncBtnOut(this)" onmouseover="FuncBtnOver(this)" onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOut(this)" onclick="ShowAnswers(8)">Afficher la r&#x00E9;ponse</button></div></form></div></li>
<li class="QuizQuestion" id="Q_9" style="display: none;"><div class="QuestionText">Figure de style qui consiste &#x00E0; juxtaposer deux antonymes afin de r&#x00E9;v&#x00E9;ler un contraste saisissant entre eux. <br />Exemples : &#x00AB; Cette obscure clart&#x00E9; qui tombe des &#x00E9;toiles &#x00BB;. &#x00AB; Il faisait un silence assourdissant &#x00BB;. &#x00AB; C'&#x00E9;tait un mort-vivant &#x00BB;.</div><div class="ShortAnswer" id="Q_9_SA"><form method="post" action="" onsubmit="return false;"><div><input type="text" id="Q_9_Guess" onfocus="TrackFocus('Q_9_Guess')" onblur="LeaveGap()" class="ShortAnswerBox" size="11"></input><br /><br /><button class="FuncButton" onfocus="FuncBtnOver(this)" onblur="FuncBtnOut(this)" onmouseover="FuncBtnOver(this)" onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOut(this)" onclick="CheckShortAnswer(9)">V&#x00E9;rifier</button><button class="FuncButton" onfocus="FuncBtnOver(this)" onblur="FuncBtnOut(this)" onmouseover="FuncBtnOver(this)" onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOut(this)" onclick="ShowHint(9)">Indice</button><button class="FuncButton" onfocus="FuncBtnOver(this)" onblur="FuncBtnOut(this)" onmouseover="FuncBtnOver(this)" onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOut(this)" onclick="ShowAnswers(9)">Afficher la r&#x00E9;ponse</button></div></form></div></li>
<li class="QuizQuestion" id="Q_10" style="display: none;"><div class="QuestionText">Figure de style qui consiste &#x00E0; dire le contraire de ce que l'on pense, le sous-entendu est volontairement ironique. <br />Exemples : &#x00AB; Ah ! C'est du joli ! C'est du propre ! Toi, la fille d'un roi ! &#x00BB;. &#x00AB; Il a &#x00E9;crit deux vers. C'est un grand po&#x00E8;te ! &#x00BB;.</div><div class="ShortAnswer" id="Q_10_SA"><form method="post" action="" onsubmit="return false;"><div><input type="text" id="Q_10_Guess" onfocus="TrackFocus('Q_10_Guess')" onblur="LeaveGap()" class="ShortAnswerBox" size="15"></input><br /><br /><button class="FuncButton" onfocus="FuncBtnOver(this)" onblur="FuncBtnOut(this)" onmouseover="FuncBtnOver(this)" onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOut(this)" onclick="CheckShortAnswer(10)">V&#x00E9;rifier</button><button class="FuncButton" onfocus="FuncBtnOver(this)" onblur="FuncBtnOut(this)" onmouseover="FuncBtnOver(this)" onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOut(this)" onclick="ShowHint(10)">Indice</button><button class="FuncButton" onfocus="FuncBtnOver(this)" onblur="FuncBtnOut(this)" onmouseover="FuncBtnOver(this)" onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOut(this)" onclick="ShowAnswers(10)">Afficher la r&#x00E9;ponse</button></div></form></div></li>
<li class="QuizQuestion" id="Q_11" style="display: none;"><div class="QuestionText">Figure de style qui consiste &#x00E0; employer &#x00E0; la place d'un mot, jug&#x00E9; brutal, un autre mot, au sens att&#x00E9;nu&#x00E9;. <br />Exemples : &#x00AB; Il n'est plus tout jeune &#x00BB; = il est vieux. &#x00AB; Il nous a quitt&#x00E9;s &#x00BB; = Il est mort.</div><div class="ShortAnswer" id="Q_11_SA"><form method="post" action="" onsubmit="return false;"><div><input type="text" id="Q_11_Guess" onfocus="TrackFocus('Q_11_Guess')" onblur="LeaveGap()" class="ShortAnswerBox" size="14"></input><br /><br /><button class="FuncButton" onfocus="FuncBtnOver(this)" onblur="FuncBtnOut(this)" onmouseover="FuncBtnOver(this)" onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOut(this)" onclick="CheckShortAnswer(11)">V&#x00E9;rifier</button><button class="FuncButton" onfocus="FuncBtnOver(this)" onblur="FuncBtnOut(this)" onmouseover="FuncBtnOver(this)" onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOut(this)" onclick="ShowHint(11)">Indice</button><button class="FuncButton" onfocus="FuncBtnOver(this)" onblur="FuncBtnOut(this)" onmouseover="FuncBtnOver(this)" onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOut(this)" onclick="ShowAnswers(11)">Afficher la r&#x00E9;ponse</button></div></form></div></li>
<li class="QuizQuestion" id="Q_12" style="display: none;"><div class="QuestionText">Figure de style qui consiste &#x00E0; disposer plusieurs mots ou expressions selon une progression de sens croissante ou d&#x00E9;croissante. <br />Exemples : &#x00AB; Va, cours, vole et nous venge! &#x00BB;. &#x00AB; L'homme semblait grand, immense, gigantesque &#x00BB;. &#x00AB; Il y avait des dizaines, des centaines, des milliers de cadavres qui gisaient par terre &#x00BB;</div><div class="ShortAnswer" id="Q_12_SA"><form method="post" action="" onsubmit="return false;"><div><input type="text" id="Q_12_Guess" onfocus="TrackFocus('Q_12_Guess')" onblur="LeaveGap()" class="ShortAnswerBox" size="14"></input><br /><br /><button class="FuncButton" onfocus="FuncBtnOver(this)" onblur="FuncBtnOut(this)" onmouseover="FuncBtnOver(this)" onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOut(this)" onclick="CheckShortAnswer(12)">V&#x00E9;rifier</button><button class="FuncButton" onfocus="FuncBtnOver(this)" onblur="FuncBtnOut(this)" onmouseover="FuncBtnOver(this)" onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOut(this)" onclick="ShowHint(12)">Indice</button><button class="FuncButton" onfocus="FuncBtnOver(this)" onblur="FuncBtnOut(this)" onmouseover="FuncBtnOver(this)" onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOut(this)" onclick="ShowAnswers(12)">Afficher la r&#x00E9;ponse</button></div></form></div></li>
<li class="QuizQuestion" id="Q_13" style="display: none;"><div class="QuestionText">Figure de style qui utilise des expressions plus faibles pour &#x00E9;voquer plus qu'elle ne le dit, souvent &#x00E0; la forme n&#x00E9;gative. <br />Exemples : &#x00AB; Il n'est pas compl&#x00E8;tement stupide &#x00BB; = il est tr&#x00E8;s intelligent ! &#x00AB; Il ne m'est pas antipathique &#x00BB; = Il m'est sympathique.<br /></div><div class="ShortAnswer" id="Q_13_SA"><form method="post" action="" onsubmit="return false;"><div><input type="text" id="Q_13_Guess" onfocus="TrackFocus('Q_13_Guess')" onblur="LeaveGap()" class="ShortAnswerBox" size="10"></input><br /><br /><button class="FuncButton" onfocus="FuncBtnOver(this)" onblur="FuncBtnOut(this)" onmouseover="FuncBtnOver(this)" onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOut(this)" onclick="CheckShortAnswer(13)">V&#x00E9;rifier</button><button class="FuncButton" onfocus="FuncBtnOver(this)" onblur="FuncBtnOut(this)" onmouseover="FuncBtnOver(this)" onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOut(this)" onclick="ShowHint(13)">Indice</button><button class="FuncButton" onfocus="FuncBtnOver(this)" onblur="FuncBtnOut(this)" onmouseover="FuncBtnOver(this)" onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOut(this)" onclick="ShowAnswers(13)">Afficher la r&#x00E9;ponse</button></div></form></div></li>
<li class="QuizQuestion" id="Q_14" style="display: none;"><div class="QuestionText">Figure de style qui consiste &#x00E0; d&#x00E9;signer un &#x00EA;tre ou un objet par un mot d&#x00E9;signant une partie de cet &#x00EA;tre ou de cet objet. Elle relie les termes par un rapport d'appartenance et d'inclusion. (Remplace un mot par l'une de ses parties ou bien remplace un mot par l'ensemble dont il fait partie).<br />Exemples : &#x00AB; Voici venir la saison des roses &#x00BB; pour d&#x00E9;signer l'&#x00E9;t&#x00E9;. &#x00AB; Les voiles au loin descendent vers Harfleur &#x00BB;. (Voiles = navires)<br /></div><div class="ShortAnswer" id="Q_14_SA"><form method="post" action="" onsubmit="return false;"><div><input type="text" id="Q_14_Guess" onfocus="TrackFocus('Q_14_Guess')" onblur="LeaveGap()" class="ShortAnswerBox" size="14"></input><br /><br /><button class="FuncButton" onfocus="FuncBtnOver(this)" onblur="FuncBtnOut(this)" onmouseover="FuncBtnOver(this)" onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOut(this)" onclick="CheckShortAnswer(14)">V&#x00E9;rifier</button><button class="FuncButton" onfocus="FuncBtnOver(this)" onblur="FuncBtnOut(this)" onmouseover="FuncBtnOver(this)" onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOut(this)" onclick="ShowHint(14)">Indice</button><button class="FuncButton" onfocus="FuncBtnOver(this)" onblur="FuncBtnOut(this)" onmouseover="FuncBtnOver(this)" onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOut(this)" onclick="ShowAnswers(14)">Afficher la r&#x00E9;ponse</button></div></form></div></li>
<li class="QuizQuestion" id="Q_15" style="display: none;"><div class="QuestionText">Figure de style dans laquelle les contraires s'opposent en sym&#x00E9;trie dans une forme AB-BA : quatre termes fonctionnent ensemble deux par deux : le 1er et le 4&#x00E8;me, le 2&#x00E8;me et le 3&#x00E8;me sont de m&#x00EA;me nature grammaticale.<br />Exemples : &#x00AB; Il faut manger pour vivre et non vivre pour manger &#x00BB;. &#x00AB; En temps de paix, les enfants enterrent leurs parents. En temps de guerre, les parents enterrent leurs enfants &#x00BB;.<br /></div><div class="ShortAnswer" id="Q_15_SA"><form method="post" action="" onsubmit="return false;"><div><input type="text" id="Q_15_Guess" onfocus="TrackFocus('Q_15_Guess')" onblur="LeaveGap()" class="ShortAnswerBox" size="10"></input><br /><br /><button class="FuncButton" onfocus="FuncBtnOver(this)" onblur="FuncBtnOut(this)" onmouseover="FuncBtnOver(this)" onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOut(this)" onclick="CheckShortAnswer(15)">V&#x00E9;rifier</button><button class="FuncButton" onfocus="FuncBtnOver(this)" onblur="FuncBtnOut(this)" onmouseover="FuncBtnOver(this)" onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOut(this)" onclick="ShowHint(15)">Indice</button><button class="FuncButton" onfocus="FuncBtnOver(this)" onblur="FuncBtnOut(this)" onmouseover="FuncBtnOver(this)" onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOut(this)" onclick="ShowAnswers(15)">Afficher la r&#x00E9;ponse</button></div></form></div></li>
<li class="QuizQuestion" id="Q_16" style="display: none;"><div class="QuestionText">Figure de style qui utilise fr&#x00E9;quemment la personnification. Elle d&#x00E9;crit une id&#x00E9;e abstraite en employant une image concr&#x00E8;te et des proc&#x00E9;d&#x00E9;s narratifs et descriptifs.<br />Exemples : &#x00AB; Le Temps mange la vie &#x00BB; = le temps est mat&#x00E9;rialis&#x00E9; par l'image d'un monstre qui d&#x00E9;vore la vie de l'homme. &#x00AB; La colombe et le rameau d'olivier &#x00BB; = la Paix. &#x00AB; Une femme aux yeux band&#x00E9;s tenant une balance &#x00BB; = la Justice.</div><div class="ShortAnswer" id="Q_16_SA"><form method="post" action="" onsubmit="return false;"><div><input type="text" id="Q_16_Guess" onfocus="TrackFocus('Q_16_Guess')" onblur="LeaveGap()" class="ShortAnswerBox" size="13"></input><br /><br /><button class="FuncButton" onfocus="FuncBtnOver(this)" onblur="FuncBtnOut(this)" onmouseover="FuncBtnOver(this)" onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOut(this)" onclick="CheckShortAnswer(16)">V&#x00E9;rifier</button><button class="FuncButton" onfocus="FuncBtnOver(this)" onblur="FuncBtnOut(this)" onmouseover="FuncBtnOver(this)" onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOut(this)" onclick="ShowHint(16)">Indice</button><button class="FuncButton" onfocus="FuncBtnOver(this)" onblur="FuncBtnOut(this)" onmouseover="FuncBtnOver(this)" onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOut(this)" onclick="ShowAnswers(16)">Afficher la r&#x00E9;ponse</button></div></form></div></li>
<li class="QuizQuestion" id="Q_17" style="display: none;"><div class="QuestionText">Figure de style qui cr&#x00E9;e l'insistance en accumulant plusieurs synonymes dans le m&#x00EA;me &#x00E9;nonc&#x00E9;.<br />Exemples : &#x00AB; Les gens &#x00E9;taient fatigu&#x00E9;s, &#x00E9;reint&#x00E9;s, &#x00E9;puis&#x00E9;s &#x00BB;. &#x00AB; Le soir &#x00E9;tait noir, sombre, obscur &#x00BB;.<br /></div><div class="ShortAnswer" id="Q_17_SA"><form method="post" action="" onsubmit="return false;"><div><input type="text" id="Q_17_Guess" onfocus="TrackFocus('Q_17_Guess')" onblur="LeaveGap()" class="ShortAnswerBox" size="14"></input><br /><br /><button class="FuncButton" onfocus="FuncBtnOver(this)" onblur="FuncBtnOut(this)" onmouseover="FuncBtnOver(this)" onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOut(this)" onclick="CheckShortAnswer(17)">V&#x00E9;rifier</button><button class="FuncButton" onfocus="FuncBtnOver(this)" onblur="FuncBtnOut(this)" onmouseover="FuncBtnOver(this)" onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOut(this)" onclick="ShowHint(17)">Indice</button><button class="FuncButton" onfocus="FuncBtnOver(this)" onblur="FuncBtnOut(this)" onmouseover="FuncBtnOver(this)" onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOut(this)" onclick="ShowAnswers(17)">Afficher la r&#x00E9;ponse</button></div></form></div></li>
<li class="QuizQuestion" id="Q_18" style="display: none;"><div class="QuestionText">Figure de style qui consiste &#x00E0; reprendre un m&#x00EA;me mot ou une m&#x00EA;me expression dans le m&#x00EA;me &#x00E9;nonc&#x00E9;.<br />Exemples : &#x00AB; La terre &#x00E9;tait grise, le bl&#x00E9; &#x00E9;tait gris, le ciel &#x00E9;tait gris &#x00BB;. &#x00AB; &#x00D4; triste, triste &#x00E9;tait mon &#x00E2;me/&#x00C0; cause, &#x00E0; cause d'une femme &#x00BB;.<br /></div><div class="ShortAnswer" id="Q_18_SA"><form method="post" action="" onsubmit="return false;"><div><input type="text" id="Q_18_Guess" onfocus="TrackFocus('Q_18_Guess')" onblur="LeaveGap()" class="ShortAnswerBox" size="14"></input><br /><br /><button class="FuncButton" onfocus="FuncBtnOver(this)" onblur="FuncBtnOut(this)" onmouseover="FuncBtnOver(this)" onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOut(this)" onclick="CheckShortAnswer(18)">V&#x00E9;rifier</button><button class="FuncButton" onfocus="FuncBtnOver(this)" onblur="FuncBtnOut(this)" onmouseover="FuncBtnOver(this)" onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOut(this)" onclick="ShowHint(18)">Indice</button><button class="FuncButton" onfocus="FuncBtnOver(this)" onblur="FuncBtnOut(this)" onmouseover="FuncBtnOver(this)" onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOut(this)" onclick="ShowAnswers(18)">Afficher la r&#x00E9;ponse</button></div></form></div></li>
<li class="QuizQuestion" id="Q_19" style="display: none;"><div class="QuestionText">Figure de style o&#x00F9; l'on omet volontairement des mots dans une phrase. Seuls les mots dont le sens demeure implicite malgr&#x00E9; leur absence peuvent &#x00EA;tre effac&#x00E9;s. L'&#x00E9;nonc&#x00E9; est plus dense puisqu'il est uniquement form&#x00E9; des mots charg&#x00E9;s de sens.<br />Exemples : &#x00AB; Heureux qui comme Ulysse a fait un beau voyage &#x00BB; = (Heureux est l'individu qui comme Ulysse a fait un beau voyage). <br />&#x00AB; Je t'aimais inconstant, qu'aurais-je fait fid&#x00E8;le ? = (Je t'aimais inconstant, qu'aurais-je fait si tu avais &#x00E9;t&#x00E9; fid&#x00E8;le ?) &#x00AB; Mon p&#x00E8;re lit son journal, ma m&#x00E8;re, une revue &#x00BB; (ellipse du verbe)<br /></div><div class="ShortAnswer" id="Q_19_SA"><form method="post" action="" onsubmit="return false;"><div><input type="text" id="Q_19_Guess" onfocus="TrackFocus('Q_19_Guess')" onblur="LeaveGap()" class="ShortAnswerBox" size="11"></input><br /><br /><button class="FuncButton" onfocus="FuncBtnOver(this)" onblur="FuncBtnOut(this)" onmouseover="FuncBtnOver(this)" onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOut(this)" onclick="CheckShortAnswer(19)">V&#x00E9;rifier</button><button class="FuncButton" onfocus="FuncBtnOver(this)" onblur="FuncBtnOut(this)" onmouseover="FuncBtnOver(this)" onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOut(this)" onclick="ShowHint(19)">Indice</button><button class="FuncButton" onfocus="FuncBtnOver(this)" onblur="FuncBtnOut(this)" onmouseover="FuncBtnOver(this)" onmouseout="FuncBtnOut(this)"  onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOut(this)" onclick="ShowAnswers(19)">Afficher la r&#x00E9;ponse</button></div></form></div></li></ol>


<div id="CharacterKeypad" class="Keypad">
<button onclick="TypeChars('\u00E9'); return false;">&#x00E9;</button> <button onclick="TypeChars('\u00E8'); return false;">&#x00E8;</button> 
</div>


</div>



<div class="Feedback" id="FeedbackDiv">
<div class="FeedbackText" id="FeedbackContent"></div>
<button id="FeedbackOKButton" class="FuncButton" onfocus="FuncBtnOver(this)" onblur="FuncBtnOut(this)" onmouseover="FuncBtnOver(this)" onmouseout="FuncBtnOut(this)" onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOut(this)" onclick="HideFeedback(); return false;">&nbsp;OK&nbsp;</button>
</div>

<!-- BeginBottomNavButtons -->


<div class="NavButtonBar" id="BottomNavBar">


<button class="NavButton" onfocus="NavBtnOver(this)" onblur="NavBtnOut(this)" onmouseover="NavBtnOver(this)" onmouseout="NavBtnOut(this)" onmousedown="NavBtnDown(this)" onmouseup="NavBtnOut(this)" onclick="history.back(); return false;">&lt;=</button>






</div>



<!-- EndBottomNavButtons -->

<!-- BeginSubmissionForm -->

<!-- EndSubmissionForm -->

</body>

</html>
